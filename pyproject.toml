[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spartan-teamlog"
version = "0.1.0"
description = "Flask web application for tracking team member attendance at meetings"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core Flask ecosystem
    "Flask>=2.3.0",
    "Flask-SQLAlchemy>=3.0.0",
    "Flask-WTF>=1.1.0",
    "WTForms>=3.0.0",
    "Flask-Login>=0.6.0",
    "Flask-Migrate>=4.0.0",
    
    # Date/time handling
    "python-dateutil>=2.8.0",
    
    # Security and validation
    "email-validator>=2.0.0",
    
    # Environment management
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-flask>=1.2.0",
    "pytest-cov>=4.0.0",
    "coverage>=7.0.0",
    
    # Code quality
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
]

ui = [
    # UI enhancements
    "Flask-Bootstrap>=3.3.7",
    "Flask-Moment>=1.0.0",
]

notifications = [
    # Email notifications
    "Flask-Mail>=0.9.1",
    
    # Background tasks
    "APScheduler>=3.10.0",
]

reports = [
    # Excel export for attendance reports
    "openpyxl>=3.1.0",
    "pandas>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/spartan-teamlog"
Repository = "https://github.com/yourusername/spartan-teamlog"
Issues = "https://github.com/yourusername/spartan-teamlog/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["flaskr*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=flaskr --cov-report=html --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", ".venv", "build", "dist"]